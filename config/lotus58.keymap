/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
*/


//   ------------------------------------------------------------------------------------------------------------
//  0|  ESC  |  1  |  2  |  3   |  4   |  5   |                     |  6   |  7    |  8    |  9   |   0   |   =   | 11
// 12|  TAB  |  Q  |  W  |  E   |  R   |  T   |                     |  Y   |  U    |  I    |  O   |   P   |   [   | 23
// 24|  SFT  |  A  |  S  |  D   |  F   |  G   |  RESET  |  | RESET  |  H   |  J    |  K    |  L   |   ;   | ' SFT | 37
// 38|  CTRL |  Z  |  X  |  C   |  V   |  B   |  MUTE   |  | PLAY   |  N   |  M    |  ,    |  .   |   /   | \ CTRL| 51
// 52                    |ENT RS|  ALT | SPACE|DELETE LW|  |ENTER RS| BSPC |  ] LW | RGUI  |                        59

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define GAME    1
#define LOWER   2
#define RAISE   3

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "balanced";
            tapping-term-ms = <300>;
            label = "HOLD_TAP";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
        };
        lhm: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            label = "home_mod";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            // hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 32 33 34 35 36 37 46 47 48 49 50>;
            // hold-trigger-on-release = true;
        };
        rhm: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            label = "home_mod";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            // hold-trigger-key-positions = <0 1 2 3 4 5 13 14 15 16 17 25 26 27 28 29 39 40 41 42 43>;
            // hold-trigger-on-release = true;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE     &kp N1      &kp N2       &kp N3       &kp N4       &kp N5                               &kp N6      &kp N7       &kp N8       &kp N9       &kp N0         &kp MINUS
&kp TAB       &kp Q       &kp W        &kp E        &kp R        &kp T                                &kp Y       &kp U        &kp I        &kp O        &kp P          &kp BSLH
&mt LCTRL ESC &lhm LALT A &lhm LMETA S &lhm LCTRL D &lhm LSHFT F &kp G      &kp C_PP       &kp PSCRN  &kp H       &rhm RSHFT J &rhm RCTRL K &rhm RMETA L &rhm RALT SEMI &ht RCTRL SQT
&kp LSHFT     &kp Z       &kp X        &kp C        &kp V        &kp B      &kp C_MUTE     &kp C_PP   &kp N       &kp M        &kp COMMA    &kp DOT      &kp FSLH       &kp RSHFT
                                       &kp LALT     &kp LGUI     &mo LOWER  &kp ENTER      &kp SPACE  &mo RAISE   &kp BSPC     &kp LGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };


        game_layer {
            bindings = <
&kp GRAVE     &kp N1      &kp N2       &kp N3       &kp N4       &kp N5                               &kp N6      &kp N7       &kp N8       &kp N9       &kp N0         &kp MINUS
&kp TAB       &kp Q       &kp W        &kp E        &kp R        &kp T                                &kp Y       &kp U        &kp I        &kp O        &kp P          &kp BSLH
&mt LCTRL ESC &kp A       &kp S        &kp D        &kp F        &kp G      &kp C_PP       &kp PSCRN  &kp H       &kp J        &kp K        &kp L        &kp SEMI       &ht RCTRL SQT
&kp LSHFT     &kp Z       &kp X        &kp C        &kp V        &kp B      &kp C_MUTE     &kp C_PP   &kp N       &kp M        &kp COMMA    &kp DOT      &kp FSLH       &kp RSHFT
                                       &kp LALT     &kp LGUI     &mo LOWER  &kp ENTER      &kp SPACE  &mo RAISE   &kp BSPC     &kp LGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // triggered by left hand
        lower_layer {
            bindings = <
&kp GRAVE   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_CLR                     &out OUT_TOG  &out OUT_USB  &out OUT_BLE  &trans   &trans    &tog GAME
&trans      &trans       &kp UP       &trans       &kp PG_UP    &kp HOME                       &kp PRCNT     &kp LBRC      &kp RBRC      &trans   &kp PSCRN &kp AMPS
&reset      &kp LEFT     &kp DOWN     &kp RIGHT    &kp PG_DN    &kp END       &trans   &trans  &kp DLLR      &kp LBKT      &kp RBKT      &trans   &kp TILDE &kp UNDER
&bootloader &trans       &trans       &kp LBRC     &kp RBRC     &trans        &trans   &trans  &kp AT        &kp PLUS      &kp EQUAL     &trans   &kp STAR  &kp PIPE
                                      &trans       &trans       &trans        &trans   &trans  &trans        &kp DEL       &trans
   >;
            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        // triggered by right hand
        raise_layer {
            bindings = <
&kp F1     &kp F2    &kp F3    &kp F4   &kp F5           &kp F6                          &kp F7        &kp F8        &kp F9        &kp F10    &kp F11  &kp F12
&trans     &trans    &trans    &trans   &kp LS(LA(UP))   &trans                          &kp PG_UP     &trans        &kp UP        &trans     &trans   &trans
&trans     &trans    &trans    &trans   &kp LS(LA(DOWN)) &kp C_NEXT   &trans   &trans    &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT  &trans   &reset
&trans     &trans    &trans    &trans   &trans           &trans       &trans   &trans    &trans        &kp PLUS      &kp EQUAL     &trans     &trans   &bootloader
                               &trans   &trans           &trans       &trans   &trans    &trans        &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;
        };
    };
};
