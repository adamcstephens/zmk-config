/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";
        combo_dsklg {
            timeout-ms = <100>;
            key-positions = <24 52>;
            layers = <0>;
            bindings = <&kp LGUI>;
        };
    };

    behaviors {
        fofunc: four_ffour {
            compatible = "zmk,behavior-mod-morph";
            label = "FOUR_FUNCFOUR";
            #binding-cells = <0>;
            bindings = <&kp N4>, <&kp F4>;
            mods = <(MOD_LALT|MOD_RALT)>;
        };
        sleft: s_left {
            compatible = "zmk,behavior-mod-morph";
            label = "S_LEFT";
            #binding-cells = <0>;
            bindings = <&kp S>, <&kp LEFT>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
        fright: f_right {
            compatible = "zmk,behavior-mod-morph";
            label = "R_RIGHT";
            #binding-cells = <0>;
            bindings = <&kp F>, <&kp RIGHT>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
			bindings = <
&kp GRAVE      &kp NUM_1 &kp NUM_2 &kp NUM_3        &kp NUM_4 &kp NUM_5                                   &kp NUM_6 &kp NUM_7 &kp NUM_8     &kp NUM_9     &kp NUM_0     &kp MINUS
&kp TAB        &kp Q     &kp W     &kp E            &kp R     &kp T                                       &kp Y     &kp U     &kp I         &kp O         &kp P         &kp BACKSLASH
&mt LCTRL ESC  &kp A     &kp S     &kp D            &kp F     &kp G     &cp C_PLAY_PAUSE  &trans          &kp H     &kp J     &kp K         &kp L         &kp SEMICOLON &kp SINGLE_QUOTE
&kp LEFT_SHIFT &kp Z     &kp X     &kp C            &kp V     &kp B     &cp C_PLAY_PAUSE  &kp PRINTSCREEN &kp N     &kp M     &kp COMMA     &kp DOT       &kp SLASH     &kp RIGHT_SHIFT
                         &kp LEFT_ALT  &kp LEFT_GUI &mo 1     &kp ENTER                                   &kp SPACE &mo 2     &kp BACKSPACE &kp RIGHT_GUI
			>;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower_layer {
			bindings = <
&bt BT_CLR   &bt BT_SEL 0         &bt BT_SEL 1          &bt BT_SEL 2   &bt BT_SEL 3 &bt BT_SEL 4                    &trans &trans               &trans                &trans             &trans    &trans
&out OUT_USB &out OUT_BLE         &trans                &kp PAGE_UP    &kp HOME     &trans                          &trans &kp LS(LEFT_BRACKET) &kp LS(RIGHT_BRACKET) &trans             &trans    &trans
&trans       &kp LEFT_BRACKET     &kp RIGHT_BRACKET     &kp PAGE_DOWN  &kp END      &kp DELETE    &reset     &trans &trans &kp LEFT_BRACKET     &kp RIGHT_BRACKET     &trans             &trans    &trans
&trans       &kp LS(LEFT_BRACKET) &kp LS(RIGHT_BRACKET) &trans         &kp SPACE    &kp BACKSPACE &cp C_MUTE &trans &trans &kp LS(EQUAL)        &kp EQUAL             &trans             &trans    &trans
                                  &trans                &trans         &trans       &kp SPACE                       &trans &trans               &kp DELETE            &trans
			>;

			sensor-bindings = <&inc_dec_cp C_NEXT C_PREVIOUS>;
        };

		raise_layer {
			bindings = <
&kp F1    &kp F2    &kp F3    &kp F4    &kp F5           &kp F6                      &kp F7    &kp F8        &kp F9    &kp F10    &kp F11   &kp F12
&trans    &trans    &trans    &trans    &kp LS(LA(UP))   &trans                      &trans    &trans        &kp UP    &trans     &trans    &trans
&trans    &trans    &trans    &trans    &kp LS(LA(DOWN)) &trans   &trans   &reset    &trans    &kp LEFT      &kp DOWN  &kp RIGHT  &trans    &trans
&trans    &trans    &trans    &trans    &trans           &trans   &trans   &trans    &trans    &kp LS(EQUAL) &kp EQUAL &trans     &trans    &trans
                    &trans    &trans    &trans           &trans                      &kp ENTER &trans        &trans    &trans
			>;

			sensor-bindings = <&inc_dec_cp C_VOLUME_UP C_VOLUME_DOWN>;
        };
    };
};
